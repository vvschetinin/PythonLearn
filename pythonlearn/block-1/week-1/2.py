#### **День 2: Типы данных и операторы (Typesdata)**

# - Числовые типы данных (int, float)
# - Строки и их методы
# - Операторы: арифметические, логические, сравнения
# - **Практические задачи:**
#   1. Преобразовать температуру из Цельсия в Фаренгейты.
#   2. Вывести первые 5 символов строки, введенной пользователем.
#   3. Проверить, является ли число четным или нечетным.
#   4. Реализовать простую систему скидок в магазине.
#   5. Создать программу для расчета ИМТ (индекса массы тела).

# ==================================================+++++++++++++++++++++++====
# Числовые типы данных (int, float)
# ==================================================+++++++++++++++++++++++====

# Объявление целых чисел
a = 10
b = -5
c = 0

# Математические операции
print(a + b)  # Сложение: 5
print(a * b)  # Умножение: -50
print(a // b)  # Целочисленное деление: -2
print(a % b)  # Остаток от деления: 0
print(a ** 2)  # Возведение в степень: 100

# Целочисленное деление
result = 10 // 3
print(result)

# Большие числа: 
# Python автоматически поддерживает большие числа, но при работе с ними могут быть накладные расходы на производительность:

# Числа с плавающей точкой (float) — это числа, которые могут иметь дробную часть.

# Примеры использования:
# Объявление чисел с плавающей точкой
x = 3.14
y = -0.001
z = 2.0

# Математические операции
print(x + y)  # Сложение: 3.139
print(x * z)  # Умножение: 6.28
print(x / z)  # Деление: 1.57
print(1e3)    # Экспоненциальная запись: 1000.0

# Нюансы:

# 1. Ошибки округления: Из-за особенностей хранения чисел с плавающей точкой в памяти могут возникать небольшие неточности
result = 0.1 + 0.2
print(result)  # Результат: 0.30000000000000004 (не точно 0.3)

# Сравнение чисел с плавающей точкой: При сравнении чисел с плавающей точкой лучше использовать функцию math.isclose()
import math

a = 0.1 + 0.2
b = 0.3
print(math.isclose(a, b))  # Результат: True

# Функции для работы с числами:
# abs(x) — возвращает модуль числа.
# round(x, n) — округляет число x до n знаков после запятой.
# pow(x, y) — возводит x в степень y.
# divmod(x, y) — возвращает кортеж (x // y, x % y)

print(abs(-10))         # Модуль числа: 10
print(round(3.14159, 2))  # Округление: 3.14
print(pow(2, 10))       # Возведение в степень: 1024
print(divmod(10, 3))    # Целочисленное деление и остаток: (3, 1)

# Практический пример

# import math

# def calculate_circle_area(radius):
#     # Проверяем, что радиус положительный
#     if radius < 0:
#         raise ValueError("Радиус не может быть отрицательным")
#     return math.pi * (radius ** 2)

# # Пример использования
# radius = float(input("Введите радиус круга в см: "))
# area = calculate_circle_area(radius)
# print(f"Площадь круга с радиусом {radius} равна {area:.2f} см квадратных")

# ==================================================+++++++++++++++++++++++====
# Строки и их методы
# ==================================================+++++++++++++++++++++++====

print("================ Строки и их методы =================")

# Способы создания строк:

# Использование одинарных кавычек
s1 = 'Hello'
# Использование двойных кавычек
s2 = "World"
# Использование тройных кавычек (для многострочных строк)
s3 = '''Это
многострочная
строка'''
# Использование экранирования
s4 = "Он сказал: \"Привет!\""

print(s3)
print(s4)

# 2. Базовые операции со строками

# Конкатенация строк
greeting = "Hello" + " " + "World!"
print(greeting)

# Умножение строк на число
repeated = "Hi" * 5
print(repeated)

# Длина строки
text = "I like Python"
lenght = len(text)
print(lenght)

# Удаляем пробелы с помощью метода .replace()
text = "I like Python"
lenght = len(text.replace(" ", ""))
print(lenght)







# ==================================================+++++++++++++++++++++++====
# Операторы: арифметические, логические, сравнения
# ==================================================+++++++++++++++++++++++====
